<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ru.sergm.picocmdb</groupId>
	<artifactId>picocmdb</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>${packaging.type}</packaging>

	<name>picoCMDB</name>
	<description>Primitive CMDB to keep track of multi-component application or system</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<!-- turn off default maven-deploy-plugin -->
		<maven.deploy.skip>true</maven.deploy.skip>
		<!-- custom properties -->
			<!-- test runners control -->
		<mvn.skipUnitTests>stub</mvn.skipUnitTests>                 		<!-- set in a profile -->
		<mvn.skipIntegrationTests>stub</mvn.skipIntegrationTests>			<!-- set in a profile -->
			<!-- to configure Tomcat deployment -->
		<mvn.tomcat.url>stub</mvn.tomcat.url> 								<!-- set in WAR profiles -->
		<mvn.tomcat.username>stub</mvn.tomcat.username> 					<!-- set in WAR profiles -->
		<mvn.tomcat.password>stub</mvn.tomcat.password>						<!-- set in WAR profiles -->
		<mvn.datasource.url>stub</mvn.datasource.url>						<!-- set in a profile -->
		<mvn.datasource.username>stub</mvn.datasource.username>				<!-- set in a profile -->
		<mvn.datasource.password>stub</mvn.datasource.password>				<!-- set in a profile -->
		<mvn.datasource.driverClass>stub</mvn.datasource.driverClass>		<!-- set in a profile; for liquibase.properties -->
		<mvn.hibernate.dialect>stub</mvn.hibernate.dialect>					<!-- set in a profile -->
	</properties>

	<dependencies>
		<!-- Spring Boot Starters -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!--dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<!-- setup resources plugin to filter the dir which contains application.properties file, to replace maven-set properties there -->
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<!-- SUREFIRE; to run unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- plugin config defined in pluginManagement section -->
			</plugin>

			<!-- FAILSAFE; run integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<!-- plugin config defined in pluginManagement section -->
			</plugin>

			<!-- LIQUIBASE; to maintain database updates -->
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<!-- plugin config defined in pluginManagement section -->
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- SUREFIRE; to run unit tests; invoked always -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<!-- to pass JVM the correct encoding which corresponds to Spring Boot encoding settings -->
						<argLine>-Dfile.encoding=UTF-8</argLine>
					</configuration>
					<executions>
						<execution>
							<id>default-test</id>	<!-- to override built-in execution w/ same name -->
							<phase>test</phase>
							<goals>
								<goal>test</goal>
							</goals>
							<configuration>
								<!-- turn on/off testing of the tests; set in profile -->
								<skipTests>${mvn.skipUnitTests}</skipTests>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- FAILSAFE; to run integration tests; invoked always -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<!-- to pass JVM the correct encoding which corresponds to Spring Boot encoding settings -->
						<argLine>-Dfile.encoding=UTF-8</argLine>
					</configuration>
					<executions>
						<execution>
							<phase>integration-test</phase>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<skipTests>${mvn.skipIntegrationTests}</skipTests>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- TOMCAT7; to deploy to Tomcat; invoked in *-WAR profiles -->
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<url>${mvn.tomcat.url}</url>
						<update>true</update>
						<username>${mvn.tomcat.username}</username>
						<password>${mvn.tomcat.password}</password>
					</configuration>
					<executions>
						<execution>
							<phase>deploy</phase>
							<goals>
								<goal>redeploy</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- LIQUIBASE; to maintain database updates; invoked always -->
				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>3.5.3</version> <!-- shoud be greater than schema version declared in changelog XML file -->
					<configuration>
						<changeLogFile>database/liquibase.changelog.xml</changeLogFile>
						<driver>${mvn.datasource.driverClass}</driver> <!-- set in a profile -->
						<url>${mvn.datasource.url}</url> <!-- set in a profile -->
						<username>${mvn.datasource.username}</username> <!-- set in a profile -->
						<password>${mvn.datasource.password}</password> <!-- set in a profile -->
						<verbose>true</verbose>
						<dropFirst>false</dropFirst>
						<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase> <!-- to avoid "no X11 display" error on Heroku -->
						<databaseChangeLogTableName>db_changelog</databaseChangeLogTableName>
						<databaseChangeLogLockTableName>db_changelog_lock</databaseChangeLogLockTableName>
					</configuration>
					<executions>
						<execution>
							<phase>process-resources</phase>
							<goals>
								<goal>update</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- SQL; to deploy model (reference) database; invoke it manually in dev-JAR profile -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>1.5</version>
					<dependencies>
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>5.1.41</version>
						</dependency>
					</dependencies>
					<configuration>
						<driver>com.mysql.jdbc.Driver</driver>
						<!-- points to model (reference) database, not that application uses -->
						<url>jdbc:mysql://localhost:3306/picocmdb-model?useUnicode=yes&amp;characterEncoding=UTF-8&amp;useSSL=false</url>
						<username>root</username>
						<password>root</password>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- LOCAL JAR; build as local executable JAR -->
		<profile>
			<id>dev-JAR</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<packaging.type>jar</packaging.type>
				<mvn.skipUnitTests>false</mvn.skipUnitTests>
				<mvn.skipIntegrationTests>false</mvn.skipIntegrationTests>
				<!-- properties to rewrite placeholders in application.properties -->
				<mvn.datasource.url>jdbc:mysql://localhost:3306/picocmdb?useUnicode=yes&amp;characterEncoding=UTF-8&amp;useSSL=false</mvn.datasource.url>
				<mvn.datasource.username>root</mvn.datasource.username>
				<mvn.datasource.password>root</mvn.datasource.password>
				<mvn.datasource.driverClass>com.mysql.jdbc.Driver</mvn.datasource.driverClass> <!-- for Liquibase properties -->
				<mvn.hibernate.dialect>org.hibernate.dialect.MySQL5Dialect</mvn.hibernate.dialect>
			</properties>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<!-- SPRING-BOOT; to make and control an executable jar -->
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<fork>true</fork>
							<arguments>-debug</arguments>
							<jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=9999 -Dfile.encoding=UTF-8</jvmArguments>
						</configuration>
						<executions>
							<execution>
								<phase>deploy</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- SQL; to deploy model (reference) database; unbound from Maven workflow, invoke when needed with sql:execute -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<!-- plugin config defined in pluginManagement section -->
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- HEROKU; build as executable JAR for heroku.com environment -->
		<profile>
			<id>prod-JAR</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<packaging.type>jar</packaging.type>
				<mvn.skipUnitTests>true</mvn.skipUnitTests>
				<mvn.skipIntegrationTests>true</mvn.skipIntegrationTests>
				<mvn.datasource.url>${env.JDBC_DATABASE_URL}</mvn.datasource.url> <!-- environment variable provided by Heroku container -->
				<mvn.datasource.username>root</mvn.datasource.username>
				<mvn.datasource.password>root</mvn.datasource.password>
				<mvn.datasource.driverClass>org.postgresql.Driver</mvn.datasource.driverClass> <!-- for Liquibase properties -->
				<mvn.hibernate.dialect>org.hibernate.dialect.PostgreSQL94Dialect</mvn.hibernate.dialect>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.postgresql</groupId>
					<artifactId>postgresql</artifactId>
					<version>9.4-1201-jdbc4</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<!-- to make and control an executable jar -->
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- LOCAL WAR; build and deploy as WAR to local Tomcat -->
		<profile>
			<id>dev-WAR</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<packaging.type>war</packaging.type>
				<mvn.skipUnitTests>false</mvn.skipUnitTests>
				<mvn.skipIntegrationTests>false</mvn.skipIntegrationTests>
				<mvn.tomcat.url>http://localhost:8080/manager/text</mvn.tomcat.url>
				<mvn.tomcat.username>maven</mvn.tomcat.username>
				<mvn.tomcat.password>maven</mvn.tomcat.password>
				<mvn.datasource.url>jdbc:mysql://localhost:3306/picocmdb?useUnicode=yes&amp;characterEncoding=UTF-8&amp;useSSL=false</mvn.datasource.url>
				<mvn.datasource.username>root</mvn.datasource.username>
				<mvn.datasource.password>root</mvn.datasource.password>
				<mvn.datasource.driverClass>com.mysql.jdbc.Driver</mvn.datasource.driverClass> 	<!-- for Liquibase properties -->
				<mvn.hibernate.dialect>org.hibernate.dialect.MySQL5Dialect</mvn.hibernate.dialect>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<!-- for WAR profiles; to ensure that the embedded servlet container doesn’t interfere with the external one -->
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<!-- TOMCAT7; to deploy to Tomcat -->
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<!-- plugin config defined in pluginManagement section -->
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- CI WAR; build and deploy as WAR to testing Tomcat under CI -->
		<profile>
			<id>test-WAR</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<packaging.type>war</packaging.type>
				<mvn.skipUnitTests>false</mvn.skipUnitTests>
				<mvn.skipIntegrationTests>false</mvn.skipIntegrationTests>
				<mvn.tomcat.url>http://tomcat.igelkott:8080/manager/text</mvn.tomcat.url>
				<mvn.tomcat.username>maven</mvn.tomcat.username>
				<mvn.tomcat.password>maven</mvn.tomcat.password>
				<mvn.datasource.url>jdbc:mysql://mysql.igelkott:3306/picocmdb?useUnicode=yes&amp;characterEncoding=UTF-8&amp;useSSL=false</mvn.datasource.url>
				<mvn.datasource.username>root</mvn.datasource.username>
				<mvn.datasource.password>root</mvn.datasource.password>
				<mvn.datasource.driverClass>com.mysql.jdbc.Driver</mvn.datasource.driverClass> <!-- for Liquibase properties -->
				<mvn.hibernate.dialect>org.hibernate.dialect.MySQL5Dialect</mvn.hibernate.dialect>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
					<!-- for WAR profiles; to ensure that the embedded servlet container doesn’t interfere with the external one -->
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<!-- TOMCAT7; to deploy to Tomcat -->
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<!-- plugin config defined in pluginManagement section -->
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
